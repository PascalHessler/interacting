% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/interprobe.R
\name{interprobe}
\alias{interprobe}
\title{Probe Interactions With GAM Simple Slopes and GAM Johnson-Neyman Curves}
\usage{
interprobe(
  x = NULL,
  z = NULL,
  y = NULL,
  model = NULL,
  data = NULL,
  jn.x.axis = "focal",
  k = NULL,
  spotlights = NULL,
  spotlight.labels = NULL,
  histogram = TRUE,
  max.unique = 11,
  n.bin.continuous = 10,
  n.max = 50,
  xlab = "",
  cols = c("red4", "dodgerblue", "green4"),
  ylab1 = "",
  ylab2 = "",
  main1 = "GAM Simple Slopes",
  main2 = "GAM Johnson-Neyman",
  legend.round = c(1, 4),
  draw = "both",
  save.as = NULL,
  xlim = NULL,
  ylim1 = NULL,
  ylim2 = NULL,
  legend.simple.slopes = NULL,
  legend.johnson.neyman = NULL,
  x.ticks = NULL,
  y1.ticks = NULL,
  y2.ticks = NULL,
  quiet = FALSE,
  probe.bins = 100
)
}
\arguments{
\item{x}{the focal predictor of interest (in an experiment, the discrete randomly
assigned manipulation). Can be the name of a variable (e.g., x='treatment') when
providing a data or a model argument, or a vector with values when the data are
not passed as a dataframe.}

\item{z}{the moderator. Same options as for \code{x}}

\item{y}{the dependent variable. Same options as for \code{x}.
Does not need to be specified when specifying a pre-existing \code{model} object.}

\item{model}{an optional model output object, containing an interaction to be probed.
Any model accepted by the package 'marginaleffects' including lm, glm, and gam
is accepted. If unspecified, a GAM model is estimated on  provided data. If specified
x (focal predictor) and z (the moderator) must also be specified, with variable names.}

\item{data}{an optional data frame containing the focal predictor, moderator and
dependent variable. If \code{data} is specified, \code{x}, \code{z} and \code{y} must be names of
variables in that dataframe. \code{model} and \code{data} may not be both specified in
a given \code{interprobe()} call (because model objects (e.g. \code{lm1} in
\code{lm1=lm(y~x*z,data=df)}) include the data on which they are based.}

\item{k}{level of smoothness/flexibility used by mgcv::gam() to fit functions,
the default used by interprobe() is k=3, increasing it will lead to more wiggly
functions increasing risk of over-fitting. mgcv::gam() uses a much higher default
which interprobe opts-out of by specifying it to be k=3. e.g., gam(y~s(x,k=3)).}

\item{spotlights}{vector with three values of the moderator, or focal predictor,
at which simple slopes and Johnson-Neyman curve are computed.
Defaults to 15th, 50th and 85th percentile of moderator values in the data.}

\item{spotlight.labels}{labels to use in the legend to indicate the spotlight values}

\item{histogram}{logical on whether sample sizes are depicted under the figure (default: TRUE)}

\item{max.unique}{the sample size can be depicted for each possible value in the x
axis or aggregating frequencies within a ranges of values (e.g., showing the
aggregate frequency of values between 100 and 200 or showing the frequency of
100, 101, 102... separately). When the number of unique values in the data
is bigger than 'max.unique' the frequencies are aggregated.}

\item{n.bin.continuous}{integer with number of bins in histogram (alters figure
only if frequencies are aggregated, see \code{max.unique}).}

\item{n.max}{in the figure, lines get wider and darker for bigger sample sizes up to a
point. n.max is the point at which lines do not get any darker/wider as sample
size get larger (e.g., with the default of \code{nmax}=50, whether there are 50 or
100 observations with x=3, the line depicting the estimated functional form will
be equally dark and wide around x=3).}

\item{xlab}{label for the x axis, defaults to be "Focal Predictor" when x is on the x-axis
and "Moderator" when z is in the x-axis. Users should replace default with a
clear descriptor of the variables (e.g., "z: age of participants")}

\item{cols}{vector with three colors used in the plot (defaults to blue, red, green)}

\item{ylab1}{label for the y axis of the simple slopes plot (defaults to
'Dependent Variable').}

\item{ylab2}{label for the y axis of the Johnson-Neyman plot (defaults to
'Marginal Effect').}

\item{main1}{Header for simple slopes figure (defaults to 'GAM Simple Slopes')}

\item{main2}{Header for Johnson Neyman figure (defaults to 'GAM Johnson-Neyman')}

\item{legend.round}{numeric vector of size two with the minimun and maximum
number of decimals to show on the legend.}

\item{draw}{which plots to draw?
\itemize{
\item \code{"both"}:  Draws both Simple Slopes and Johnson-Neyman (default)
\item \code{"simple slopes"}: Only Simple Slopes
\item \code{"jn"}: Only Johnson-Neyman
}}

\item{save.as}{name of file to save figure to. Extension of the file name determines
whether figure is a .svg or a .png file (e.g., file='c:/temp/figure1.svg').
Default is NULL, in which case the figure is not saved, only shown on screen.}

\item{xlim}{numeric vector of length 2, giving the x coordinates range}

\item{ylim1}{numeric vector of length 2, giving the y coordinates range for Simple Slopes plot}

\item{ylim2}{numeric vector of length 2, giving the y coordinates range for Johnson-Neyman (jn) plot}

\item{legend.simple.slopes}{text to place on legend title (e.g., "Moderator
Values") in Simple Slopes plot}

\item{legend.johnson.neyman}{text to place on legend title (e.g.,
"Effect of focal predictor") in Johnson Neyman plot}

\item{x.ticks}{values to use for ticks in x-axis, either a vector or numeric values
or a dataframe with two columns. The first column contains x-axis variable values, the second
the labels to show in the x-axis for those values, e.g., x.ticks=data.frame(values=c(1,4,7),
labels=c("Against","Neutral","Favor")).}

\item{quiet}{if TRUE interprobe() does not print output on the console as it runs.}

\item{probe.bins}{interger specifying how many different values to probe the interactions for
(the bigger this nummber, the more precise the regions of significance are and smoother the plots).}

\item{y.ticks}{same as x.ticks, for the y-axis}
}
\description{
Probe interaction as proposed in Simonsohn (2024), estimating a GAM model
and computing simple slopes ('spotlight') and Johnson-Neyman ('jn')
curves off the GAM model. While designed for GAM it can be used to probe
other models including lm()
}
